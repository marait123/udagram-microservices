apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-user
  labels:
    app: api-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-user
  template:
    metadata:
      labels:
        app: api-user
    spec:
      containers:
      - name: api-user
        image: marait123/udagram-api-user
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "2048Mi"
            cpu: "500m"
        # env:
        # - name: URL
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: URL
        # - name: AWS_BUCKET
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: AWS_BUCKET
        # - name: AWS_PROFILE
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: AWS_PROFILE
        # - name: AWS_REGION
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: AWS_REGION
        # - name: JWT_SECRET
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: JWT_SECRET
        # - name: POSTGRESS_DB
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: POSTGRESS_DB
        # - name: POSTGRESS_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: udconfig
        #       key: POSTGRESS_HOST
        # - name: POSTGRESS_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: udsecret
        #       key: POSTGRESS_PASSWORD
        # - name: POSTGRESS_USERNAME
        #   valueFrom:
        #     secretKeyRef:
        #       name: udsecret
        #       key: POSTGRESS_USERNAME      
        envFrom:
        - secretRef:
            name: udsecret
        - configMapRef:
            name: udconfig
        volumeMounts:
              - name: aws-secret
                mountPath: "/root/.aws/"
                readOnly: true        
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret